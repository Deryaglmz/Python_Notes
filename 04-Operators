### Arithmetic (Number) Operators

OperatOr	                     function 	                   Example Usage
   +	                         Collection	                      x + y
   -	                         Extraction	                      x - y
   *	                          Impact	                      x * y
   /	                          Divide	                      x / y 
   %	                           Mode	                              x % y  
  **	                           Base	                              x ** y   
  //	                           Root	                              x // y


  # Assignment Operators

  OperatOr	                    Example Usage	                 explanation
    =	                           x = 5	                       x = 5
   +=	                           x += 3	                      x = x + 3
   -=	                           x -= 3                           x = x - 3
   *=	                           x *= 3	                      x = x * 3
   /=	                           x /= 3	                      x = x / 3
   %=	                           x %= 3	                      x = x % 3
   //=	                           x //= 3	                      x = x // 3
   **=	                           x **= 3	                      x = x ** 3
   &=	                           x &= 3	                      x = x & 3
   |=	                           x |= 3	                      x = x | 3
   ^=	                           x ^= 3	                      x = x ^ 3
   >>=	                           x >>= 3	                      x = x >> 3
   <<=	                           x <<= 3	                      x = x << 3


   # Benchmark Operators

   Operator	                    Example Usage	                  explanation
  ==	                            Equals                           x == y
  !=	                           Not equal	                      x != y
  >	                                is big	                      x > y
  <                                 is small	                    x < y
  >=	                      greater than or equal to	             x >= y
  <=	                        Less than or equal	                  x <= y

  # Logical Operators

  Operator	                     explanation	                                               Example Usage
and              	If both statements are true, the condition is satisfied.	              x < 5 and x < 10
or	          The condition is satisfied if even one of the two statements is true	          x < 5 or x < 4
not	                The result is reversed. False if true, true if false.	                not(x < 5 and < < 10



# Identification Operators

Operator	                     explanation	                                               Example
  is	             True if both variables are the same object	                                x is y
  is not	          True if the variables are of different types	                           x is not y

  # Belonging Operators

  Operatör	                     explanation	                                               Example
  in	               True if the series contains the specified value	                        x in y
 not in	             True if the series does not contain the specified value	                x not in y


# Bit Operators

Operatör	                     Name	                                              explanation
   &	                         AND	        "The & operator compares the bits in the binary representations of two numbers
                                                   and if both bits are 1, the result will be 1; otherwise, it will be 0."
   |	                         OR	                                 If either of the two bits is 1, it sets each bit to 1.
   ^	                         XOR	                           If only one of the two bits is 1, it sets each bit to 1
   ~	                         NOT	                                         flips the bits
  <<	                                                                      Shifts left by adding zero
  >>	                                                                   Shifts right by adding zero
